{"version":3,"sources":["components/AddCategory.tsx","components/GifGridItem.tsx","helpers/getGifs.ts","components/GifGrid.tsx","hooks/useFetchGifs.ts","GifExpertApp.tsx","index.tsx"],"names":["AddCategory","setCategories","React","useState","inputValue","setInputValue","action","onSubmit","e","preventDefault","trim","length","category","find","type","value","onChange","target","GifGridItem","id","title","url","className","src","alt","getGifs","a","encodeURI","fetch","resp","json","data","gifs","map","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","img","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"4LAMaA,EAAc,SAAC,GAAkD,IAAhDC,EAA+C,EAA/CA,cAA+C,EAErCC,IAAMC,SAAS,IAFsB,mBAElEC,EAFkE,KAEtDC,EAFsD,KAiBzE,OACI,sBAAMC,OAAO,GAAGC,SATC,SAACC,GAClBA,EAAEC,iBACEL,EAAWM,OAAOC,OAAS,IAC3BV,GAAc,SAAEW,GAAF,OAA4BA,EAASC,MAAK,SAAAL,GAAC,OAAIA,IAAMJ,KAA0CQ,EAApE,CAAyCR,GAAzC,mBAAwDQ,OACjGP,EAAc,MAKlB,SACI,uBACIS,KAAK,OACLC,MAAQX,EACRY,SAlBc,SAACR,GAAgD,IAC/DO,EAAUP,EAAES,OAAZF,MACRV,EAAcU,S,QCPTG,EAAc,SAAC,GAA6C,EAA1CC,GAA2C,IAAvCC,EAAsC,EAAtCA,MAAOC,EAA+B,EAA/BA,IACtC,OACI,qBAAIC,UAAU,yCAAd,UACI,qBAAKC,IAAMF,EAAMG,IAAMJ,IACvB,4BAAKA,Q,uBCDJK,EAAO,uCAAG,WAAQb,GAAR,uBAAAc,EAAA,6DACbL,EADa,0FAC4EM,UAAUf,GADtF,sBAEAgB,MAAMP,GAFN,cAEbQ,EAFa,gBAGIA,EAAKC,OAHT,uBAGXC,EAHW,EAGXA,KAEFC,EAAOD,EAAKE,KAAK,YACnB,MAAO,CACHd,GAFoD,EAAjCA,GAGnBC,MAHoD,EAA7BA,MAIvBC,IAJoD,EAAtBa,OAIlBC,iBAAiBd,QATlB,kBAaZW,GAbY,4CAAH,sDCGPI,EAAU,SAAC,GAAyC,IAAvCxB,EAAsC,EAAtCA,SAAsC,ECHpC,SAAEA,GAAuB,IAAD,EACtBV,IAAMC,SAA6B,CACzD4B,KAAM,GACNM,SAAS,IAHmC,mBACzCC,EADyC,KAClCC,EADkC,KAgBhD,OAVArC,IAAMsC,WAAU,WACZf,EAAQb,GACH6B,MAAK,SAACC,GACHH,EAAS,CACLR,KAAMW,EACNL,SAAS,SAGtB,CAACzB,IAEG0B,EDX2BK,CAAa/B,GAAjCsB,EAF8C,EAEpDH,KAAcM,EAFsC,EAEtCA,QAEtB,OACI,qCACI,6BAAMzB,IAEJyB,GAAW,2CAEb,oBAAIf,UAAU,YAAd,SACMY,EAAOD,KAAI,SAAEW,GAAF,OACT,cAAC,EAAD,eAESA,GADCA,EAAIzB,aEpBrB0B,EAAe,WAAoB,IAAD,EAEP3C,IAAMC,SAAoB,CAAC,cAFpB,mBAEpC2C,EAFoC,KAExB7C,EAFwB,KAI3C,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAEA,6BACM6C,EAAWb,KAAK,SAAArB,GAAQ,OACtB,cAAC,EAAD,CAEIA,SAAWA,GADLA,Y,YCT9BmC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.e3124a34.chunk.js","sourcesContent":["import React from 'react';\n\ntype TAddCategory = {\n    setCategories: React.Dispatch<React.SetStateAction<string[]>>;\n}\n\nexport const AddCategory = ({ setCategories }: TAddCategory): JSX.Element => {\n\n    const [inputValue, setInputValue] = React.useState('');\n\n    const handleInputChanhe = (e: React.FormEvent<HTMLInputElement>): void => {\n        const { value } = e.target as HTMLInputElement;\n        setInputValue(value);\n    }\n\n    const handleSubmit = (e: React.FormEvent): void => {\n        e.preventDefault();\n        if (inputValue.trim().length > 2) {\n            setCategories(( category: string[] ) => (!category.find(e => e === inputValue) ? [inputValue, ...category] : category));\n            setInputValue('');\n        }\n    };\n\n    return (\n        <form action=\"\" onSubmit={ handleSubmit }>\n            <input \n                type=\"text\"\n                value={ inputValue }\n                onChange={ handleInputChanhe }\n            />\n        </form>\n    )\n}\n","import React from 'react';\n\nimport { TGifs } from '../utils/types';\n\n\nexport const GifGridItem = ( { id, title, url }: TGifs ): JSX.Element => {\n    return (\n        <li className=\"card animate__animated animate__bounce\">\n            <img src={ url } alt={ title }/>\n            <p>{ title }</p>\n        </li>\n    )\n}\n","type TGiphy = {\n    id: string, \n    title: string, \n    images: { \n        downsized_medium: { url: string } \n    }\n}\n\nexport const getGifs = async ( category: string ) => {\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=9TCRr4GQuLT9fYANVZVM80mWzJODHpVS&q=${encodeURI(category)}&limit=10`;\n    const resp = await fetch(url);\n    const { data } = await resp.json();\n\n    const gifs = data.map( ( { id, title, images }: TGiphy ) => {\n        return {\n            id: id,\n            title: title,\n            url: images.downsized_medium.url\n        }\n    });\n\n    return gifs;\n}","import React from 'react';\n\nimport { GifGridItem } from './GifGridItem';\nimport { TGifs } from '../utils/types';\nimport { useFetchGifs } from '../hooks/useFetchGifs';\n\n\ntype TGifGrid = {\n    category: string\n}\n\nexport const GifGrid = ({ category }: TGifGrid): JSX.Element => {\n\n    const { data: images, loading } = useFetchGifs(category);\n\n    return (\n        <>\n            <h3>{ category }</h3>\n\n            { loading && <p>Loading...</p> }\n\n            <ul className=\"card-grid\">\n                { images.map(( img: TGifs ) => \n                    <GifGridItem\n                        key={ img.id }\n                        { ...img }\n                    />\n                )}\n            </ul>\n        </>\n    )\n}\n","import React from 'react';\nimport { getGifs } from '../helpers/getGifs';\n\ntype TUseFetchGifsState = {\n    data: any[],\n    loading: boolean \n}\n\nexport const useFetchGifs = ( category: string ) => {\n    const [state, setState] = React.useState<TUseFetchGifsState>({\n        data: [],\n        loading: true\n    });\n    \n    React.useEffect(() =>{\n        getGifs(category)\n            .then((imgs) => {\n                setState({\n                    data: imgs,\n                    loading: false\n                });\n        });\n    }, [category]);\n\n    return state;\n}","import React from 'react'\nimport { AddCategory } from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n\nexport const GifExpertApp = (): JSX.Element => {\n\n    const [categories, setCategories] = React.useState<string[]>( ['One punch']);\n\n    return (\n        <>\n            <h2>GifExpertApp</h2>\n            <AddCategory setCategories={ setCategories }/>\n            <hr/>\n\n            <ol>\n                { categories.map( category => (\n                    <GifGrid \n                        key={ category }\n                        category={ category }\n                    />\n                )) }\n            </ol>\n        </>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { GifExpertApp } from './GifExpertApp';\n\nimport 'normalize.css';\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}